language: csharp
mono: none
sudo: required

matrix:
  include:
    - dotnet: 2.2
      env:
        - SOLUTION="MinorEngine/MinorEngine.sln"
        - BUILDCONFIG="Release"

#Restore the Submodules and the Project
install:
  #Install OpenCL Libs and Tools
  - sudo apt install ocl-icd-libopencl1
  - sudo apt install opencl-headers
  - sudo apt install clinfo
  - sudo apt install ocl-icd-opencl-dev
  - sudo apt install fakeroot
  #Preparing OpenCL Runtime
  #Downloading and unpacking
  - sudo apt-get install -y rpm alien libnuma1
  - wget http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/15532/l_opencl_p_18.1.0.015.tgz
  - tar -xvf l_opencl_p_18.1.0.015.tgz 
  #Converting rpm packages to deb packages to be able to install them with dpkg
  - cd l_opencl_p_18.1.0.015/rpm/
  - fakeroot alien --to-deb intel-openclrt-18.1.0.015-18.1.0-015.x86_64.rpm
  - fakeroot alien --to-deb intel-openclrt-pset-18.1.0.015-18.1.0-015.noarch.rpm
  #Install the converted packages.
  - sudo dpkg -i intel-openclrt-18.1.0.015_18.1.0-16_amd64.deb
  - sudo dpkg -i intel-openclrt-pset-18.1.0.015_18.1.0-16_all.deb
  #Set up the package configs
  - sudo touch /etc/ld.so.conf.d/intelOpenCL.conf
  - sudo bash -c 'echo "/opt/intel/opencl-1.2-6.4.0.25/lib64/clinfo" >> /etc/ld.so.conf.d/intelOpenCL.conf'
  - sudo mkdir -p /etc/OpenCL/vendors
  - sudo ln /opt/intel/opencl-1.2-6.4.0.25/etc/intel64.icd /etc/OpenCL/vendors/intel64.icd
  - sudo ldconfig
  #Testing if it worked
  - clinfo

    #Install GDI+
  - sudo apt-get install libgdiplus
  #Restore Projects
  - dotnet restore ADL/ADL/
  - dotnet restore ext-pp/
  - dotnet restore opencl-dotnet/
  - dotnet restore MinorEngine/ #<-- The Project


#Build the projects
#ADL has to be splitted into its subprojects since 2 of them are .Net Framework based and will not compile with .net Core
#Also the build order matters since the MinorEngine solution needs references from the other submodules
script:
  - dotnet build ADL/ADL/ADL/ADL.csproj -c $BUILDCONFIG
  - dotnet build ADL/ADL/ADL.Crash/ADL.Crash.csproj -c $BUILDCONFIG
  - dotnet build ADL/ADL/ADL.Network.Client/ADL.Network.Client.csproj -c $BUILDCONFIG
  - dotnet build ADL/ADL/ADL.Network.Server/ADL.Network.Server.csproj -c $BUILDCONFIG
  - dotnet build ADL/ADL/ADL.Network.Shared/ADL.Network.Shared.csproj -c $BUILDCONFIG
  - dotnet build ADL/ADL/ADL.UnitTests/ADL.UnitTests.csproj -c $BUILDCONFIG
  - dotnet build ext-pp/ext_pp.sln -c $BUILDCONFIG
  - dotnet build opencl-dotnet/OpenCl.DotNetCore.sln -c $BUILDCONFIG
  - dotnet build $SOLUTION -c $BUILDCONFIG

#Testing all included projects.
after_script:
  - dotnet test ext-pp/ext_pp.sln -p:Configuration=Release
  - dotnet test ADL/ADL/ADL.UnitTests/ADL.UnitTests.csproj -p:Configuration=Release
  - dotnet test $SOLUTION --collect:"XPlat Code Coverage" -p:Configuration=Release -p:DefineConstants=NO_CL
  - bash <(curl -s https://codecov.io/bash) #Uploading the coverage report to Codecov.
